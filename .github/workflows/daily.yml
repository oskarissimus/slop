name: slop-daily

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: "Opis tematu (opcjonalny). Jeśli podany, zasili zmienną PROMPT."
        required: false

concurrency:
  group: slop-daily
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v3

      - name: Install Python 3.11 via uv
        run: uv python install 3.11

      - name: Install ffmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Prepare YouTube OAuth credentials
        run: |
          mkdir -p ./.youtube
          # These are JSON contents stored in GitHub Secrets
          echo '${{ secrets.YT_CLIENT_SECRET_JSON }}' > ./.youtube/client_secret.json
          echo '${{ secrets.YT_TOKEN_JSON }}' > ./.youtube/token.json

      - name: Propagate manual inputs to env
        run: |
          if [ -n "${{ github.event.inputs.prompt }}" ]; then echo "PROMPT=${{ github.event.inputs.prompt }}" >> $GITHUB_ENV; fi
          if [ -n "${{ github.event.inputs.mode }}" ]; then echo "SLOP_MODE=${{ github.event.inputs.mode }}" >> $GITHUB_ENV; fi

      - name: Lower image quality in test mode (cheapest change)
        run: |
          if [ "${{ github.event.inputs.mode }}" = "test" ]; then
            echo "OPENAI_IMAGE_QUALITY=low" >> $GITHUB_ENV
          fi

      - name: Generate (upload only in production)
        run: |
          UPLOAD_FLAG=""
          if [ "${{ github.event.inputs.mode }}" != "test" ]; then UPLOAD_FLAG="--upload"; fi
          PROMPT_ARGS=""
          if [ -n "${{ github.event.inputs.prompt }}" ]; then
            PROMPT_ARGS="--prompt \"${{ github.event.inputs.prompt }}\""
          elif [ -f "prompt.txt" ]; then
            PROMPT_ARGS="--prompt-file prompt.txt"
          fi
          uv run --python 3.11 slop run-once $UPLOAD_FLAG --credentials-dir ./.youtube --output-dir outputs $PROMPT_ARGS

      - name: Upload artifact (latest video)
        uses: actions/upload-artifact@v4
        with:
          name: latest-video
          path: outputs/*.mp4
          if-no-files-found: ignore


